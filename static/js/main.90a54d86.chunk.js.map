{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Comment","props","status","comment","ingredient","description","react_default","a","createElement","DefaultComment","default","DisabledComment","SelectedComment","selected","className","text","link","Product","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","handleClick","bind","assertThisInitialized","e","setState","ctx","refs","canvas","getContext","strokeStyle","stroke","currentTarget","addEventListener","classList","contains","add","updateCanvas","fillStyle","lineWidth","beginPath","moveTo","lineTo","closePath","fill","_this2","onClick","id","ref","width","height","dish","title","portions","gift","weight","Component","App","_ref","products","map","product","i","App_Product","assign","key","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.90a54d86.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nfunction Comment(props) {\n  const status = props.status;\n  const comment = props.comment;\n  const ingredient = props.description.ingredient;\n  if (status === \"default\") {\n    return <DefaultComment comment={comment.default} />;\n  } else if (status === \"disabled\") {\n    return <DisabledComment ingredient={ingredient} />;\n  } else if (status === \"selected\") {\n    return <SelectedComment comment={comment.selected} />;\n  }\n}\n\nfunction DefaultComment(props) {\n  return (\n    <div className=\"comment\">\n      {props.comment.text}\n      <a>{props.comment.link}</a>\n    </div>\n  );\n}\n\nfunction DisabledComment(props) {\n  return (\n    <div className=\"comment disabled\">\n      Печалька, {props.ingredient} закончился\n    </div>\n  );\n}\n\nfunction SelectedComment(props) {\n  return <div className=\"comment selected\">{props.comment}</div>;\n}\n\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: this.props.status\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    if (this.state.status !== \"disabled\") {\n      this.setState(state => ({\n        status: state.status === \"default\" ? \"selected\" : \"default\"\n      }));\n\n      const ctx = this.refs.canvas.getContext(\"2d\");\n\n      ctx.strokeStyle === \"#1698d9\"\n        ? (ctx.strokeStyle = \"rgb(217, 22, 103)\")\n        : (ctx.strokeStyle = \"#1698d9\");\n      ctx.stroke();\n\n      e.currentTarget.addEventListener(\"mouseout\", function() {\n        if (this.classList.contains(\"selected\")) {\n          this.classList.add(\"out\");\n        }\n      });\n    }\n  }\n  componentDidMount() {\n    this.updateCanvas();\n  }\n  updateCanvas() {\n    debugger;\n    const ctx = this.refs.canvas.getContext(\"2d\");\n    ctx.fillStyle = \"rgb(242, 242, 242)\";\n    this.state.status === \"default\"\n      ? (ctx.strokeStyle = \"rgb(22, 152, 217)\")\n      : (ctx.strokeStyle = \"#b3b3b3\");\n    ctx.lineWidth = 6;\n    ctx.beginPath();\n    ctx.moveTo(0, 45);\n    ctx.lineTo(45, 0);\n    ctx.lineTo(312, 0);\n    ctx.lineTo(312, 472);\n    ctx.lineTo(0, 472);\n    ctx.closePath();\n\n    ctx.fill();\n    ctx.stroke();\n  }\n\n  render() {\n    return (\n      <div\n        className={\"item \" + this.state.status}\n        onClick={e => this.handleClick(e)}\n      >\n        <canvas id=\"canvas\" ref=\"canvas\" width=\"312\" height=\"472\" />\n        <div className=\"overlay\" />\n        <div className=\"container\">\n          <p className=\"dish\">{this.props.description.dish}</p>\n          <div className=\"product-title\">{this.props.description.title}</div>\n          <div className=\"ingredient\">{this.props.description.ingredient}</div>\n          <div className=\"portions\">\n            {this.props.description.portions} порций\n          </div>\n          <div className=\"gift\">{this.props.description.gift}</div>\n          <div className=\"cat-pic-container\" />\n          <div className=\"weight\">\n            {this.props.weight}\n            <br />\n            <span>кг</span>\n          </div>\n          <Comment\n            status={this.state.status}\n            comment={this.props.comment}\n            description={this.props.description}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst App = ({ title, products }) => (\n  <div className=\"bg\">\n    <div className=\"title\">{title}</div>\n    <div className=\"products\">\n      {products.map((product, i) => (\n        <Product key={i} {...product} />\n      ))}\n    </div>\n  </div>\n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nvar title = \"Ты сегодня покормил кота?\";\nvar data = [\n  {\n    status: \"default\",\n    description: {\n      dish: \"Сказочное заморское яство\",\n      title: \"Нямушка\",\n      ingredient: \"с фуа-гра\",\n      portions: 10,\n      gift: \"мышь в подарок\"\n    },\n    weight: 0.5,\n    comment: {\n      default: {\n        text: \"Чего сидишь? Порадуй котэ, \",\n        link: \"купи.\"\n      },\n      selected: \"Печень утки разварная с артишоками.\"\n    }\n  },\n  {\n    status: \"default\",\n    description: {\n      dish: \"Сказочное заморское яство\",\n      title: \"Нямушка\",\n      ingredient: \"с рыбой\",\n      portions: 40,\n      gift: \"2 мыши в подарок\"\n    },\n    weight: 2,\n    comment: {\n      default: {\n        text: \"Чего сидишь? Порадуй котэ, \",\n        link: \"купи.\"\n      },\n      selected: \"Головы щучьи с чесноком да свежайшая сёмгушка.\"\n    }\n  },\n  {\n    status: \"disabled\",\n    description: {\n      dish: \"Сказочное заморское яство\",\n      title: \"Нямушка\",\n      ingredient: \"с курой\",\n      portions: 100,\n      gift: \"5 мышей в подарок\"\n    },\n    weight: 5,\n    comment: {\n      default: {\n        text: \"Чего сидишь? Порадуй котэ, \",\n        link: \"купи.\"\n      },\n      selected: \"Филе из цыплят с трюфелями в бульоне.\"\n    }\n  }\n];\n\nReactDOM.render(\n  <App title={title} products={data} />,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}